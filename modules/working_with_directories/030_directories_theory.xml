<?hard-pagebreak?>
	<section><title><emphasis>pwd</emphasis></title>
		<para>The <command>you are here</command> sign can be displayed with the <command>pwd</command><indexterm><primary>pwd</primary></indexterm> command (Print Working Directory). Go ahead, try it: Open a command line interface (also called a terminal, console or xterm) and type <command>pwd</command>. The tool displays your <command>current directory</command><indexterm><primary>current directory</primary></indexterm>.</para>
		<screen>paul@debian8:~$ <command>pwd</command>
/home/paul</screen>
	</section>
	<section><title><emphasis>cd</emphasis></title>
		<para>You can change your current directory with the <command>cd</command><indexterm><primary>cd</primary></indexterm> command (Change Directory). </para>
		<screen>paul@debian8$ <command>cd /etc</command>
paul@debian8$ <command>pwd</command>
/etc
paul@debian8$ <command>cd /bin</command>
paul@debian8$ <command>pwd</command>
/bin
paul@debian8$ <command>cd /home/paul/</command>
paul@debian8$ <command>pwd</command>
/home/paul</screen>
		<section><title><emphasis>cd ~</emphasis></title>
			<para>The <command>cd</command> is also a shortcut to get back into your home directory. Just typing <command>cd</command> without a target directory, will put you in your home directory. Typing <command>cd ~</command><indexterm><primary>~</primary></indexterm> has the same effect.</para>
			<screen>paul@debian8$ <command>cd /etc</command>
paul@debian8$ <command>pwd</command>
/etc
paul@debian8$ <command>cd</command>
paul@debian8$ <command>pwd</command>
/home/paul
paul@debian8$ <command>cd ~</command>
paul@debian8$ <command>pwd</command>
/home/paul</screen>
		</section>
		<section><title><emphasis>cd ..</emphasis></title>
			<para>To go to the <command>parent directory</command><indexterm><primary>parent directory</primary></indexterm> (the one just above your current directory in the directory tree), type <command>cd ..</command><indexterm><primary>..</primary></indexterm> .</para>
			<screen>paul@debian8$ <command>pwd</command>
/usr/share/games
paul@debian8$ <command>cd ..</command>
paul@debian8$ <command>pwd</command>
/usr/share</screen>
			<para><emphasis>To stay in the current directory, type <command>cd .</command><indexterm><primary>.</primary></indexterm> ;-)</emphasis> We will see useful use of the <command>.</command> character representing the current directory later.</para>
		</section>
<?hard-pagebreak?>
		<section><title><emphasis>cd -</emphasis></title>
			<para>Another useful shortcut with <command>cd</command> is to just type <command>cd -</command><indexterm><primary>cd -</primary></indexterm> to go to the previous directory.</para>
			<screen>paul@debian8$ <command>pwd</command>
/home/paul
paul@debian8$ <command>cd /etc</command>
paul@debian8$ <command>pwd</command>
/etc
paul@debian8$ <command>cd -</command>
/home/paul
paul@debian8$ <command>cd -</command>
/etc</screen>
		</section>
	</section>
	<section><title>Absolute and Relative Paths</title>
		<para>You should be aware of <command>absolute and relative paths</command><indexterm><primary>path</primary></indexterm> in the file tree. When you type a path starting with a <command>slash (/)</command>, then the <command>root</command><indexterm><primary>/</primary></indexterm> of the file tree is assumed. If you don't start your path with a slash, then the current directory is the assumed starting point.</para>
		<para>The screenshot below first shows the current directory <command>/home/paul</command>. From within this directory, you have to type <command>cd /home</command> instead of <command>cd home</command> to go to the <command>/home</command> directory.</para>
		<screen>paul@debian8$ <command>pwd</command>
/home/paul
paul@debian8$ <command>cd home</command>
bash: cd: home: No such file or directory
paul@debian8$ <command>cd /home</command>
paul@debian8$ <command>pwd</command>
/home</screen>
		<para>When inside <command>/home</command>, you have to type <command>cd paul</command> instead of <command>cd /paul</command> to enter the subdirectory <command>paul</command> of the current directory <command>/home</command>.</para>
		<screen>paul@debian8$ <command>pwd</command>
/home
paul@debian8$ <command>cd /paul</command>
bash: cd: /paul: No such file or directory
paul@debian8$ <command>cd paul</command>
paul@debian8$ <command>pwd</command>
/home/paul</screen>
		<para>In case your current directory is the <command>root directory /</command>, then both <command>cd /home</command> and <command>cd home</command> will get you in the <command>/home</command> directory.</para>
		<screen>paul@debian8$ <command>pwd</command>
/
paul@debian8$ <command>cd home</command>
paul@debian8$ <command>pwd</command>
/home
paul@debian8$ <command>cd /</command>
paul@debian8$ <command>cd /home</command> 
paul@debian8$ <command>pwd</command>
/home</screen>
		<para>This was the last screenshot with <command>pwd</command><indexterm><primary>pwd(1)</primary></indexterm> statements. From now on, the current directory will often be displayed in the prompt. Later in this book we will explain how the shell variable <command>$PS1</command><indexterm><primary>$PS1</primary></indexterm> can be configured to show this.</para>
	</section>
<?hard-pagebreak?>
	<section><title>Path Completion</title>
		<para>The <command>tab key</command><indexterm><primary>tab key(bash)</primary></indexterm> can help you in typing a path without errors. Typing <command>cd /et</command> followed by the <command>tab key</command> will expand the command line to <command>cd /etc/</command>. When typing <command>cd /Et</command> followed by the <command>tab key</command>, nothing will happen because you typed the wrong <command>path</command><indexterm><primary>path</primary></indexterm> (upper case E).</para>
		<para>You will need fewer key strokes when using the <command>tab key</command>, and you will be sure your typed <command>path</command> is correct!</para>
	</section>
	<section><title><emphasis>ls</emphasis></title>
		<para>You can list the contents of a directory with <command>ls</command><indexterm><primary>ls</primary></indexterm>.</para>
		<screen>paul@debian8:~$ <command>ls</command>
allfiles.txt  dmesg.txt  services   stuff  summer.txt
paul@debian8:~$</screen>
		<section><title><emphasis>ls -a</emphasis></title>
			<para>A frequently used option with ls is <command>-a</command> to show all files. Showing all files means including the <command>hidden files</command><indexterm><primary>hidden files</primary></indexterm>. When a file name on a Linux file system starts with a dot, it is considered a <command>hidden file</command> and it doesn't show up in regular file listings.</para>
			<screen>paul@debian8:~$ <command>ls</command>
allfiles.txt  dmesg.txt  services  stuff  summer.txt
paul@debian8:~$ <command>ls -a</command>
.   allfiles.txt   .bash_profile  dmesg.txt   .lesshst  stuff
..  .bash_history  .bashrc        services    .ssh      summer.txt 
paul@debian8:~$</screen>
		</section>
		<section><title><emphasis>ls -l</emphasis></title>
			<para>Many times you will be using options with <command>ls</command> to display the contents of the directory in different formats or to display different parts of the directory. Typing just <command>ls</command> gives you a list of files in the directory. Typing <command>ls -l</command><indexterm><primary>ls(1)</primary></indexterm> (that is a letter L, not the number 1) gives you a long listing.</para>
			<screen>paul@debian8:~$ <command>ls -l</command>
total 17296
-rw-r--r-- 1 paul paul 17584442 Sep 17 00:03 allfiles.txt
-rw-r--r-- 1 paul paul    96650 Sep 17 00:03 dmesg.txt
-rw-r--r-- 1 paul paul    19558 Sep 17 00:04 services
drwxr-xr-x 2 paul paul     4096 Sep 17 00:04 stuff
-rw-r--r-- 1 paul paul        0 Sep 17 00:04 summer.txt</screen>
		</section>
<?hard-pagebreak?>
		<section><title><emphasis>ls -lh</emphasis></title>
			<para>Another frequently used ls option is <command>-h</command>. It shows the numbers (file sizes) in a more human readable format. Also shown below is some variation in the way you can give the options to <command>ls</command>. We will explain the details of the output later in this book.</para>
			<para><emphasis>Note that we use the letter L as an option in this screenshot, not the number 1.</emphasis></para>
			<screen>paul@debian8:~$ <command>ls -l -h</command>
total 17M
-rw-r--r-- 1 paul paul  17M Sep 17 00:03 allfiles.txt
-rw-r--r-- 1 paul paul  95K Sep 17 00:03 dmesg.txt
-rw-r--r-- 1 paul paul  20K Sep 17 00:04 services
drwxr-xr-x 2 paul paul 4.0K Sep 17 00:04 stuff
-rw-r--r-- 1 paul paul    0 Sep 17 00:04 summer.txt
paul@debian8:~$ <command>ls -lh</command>
total 17M
-rw-r--r-- 1 paul paul  17M Sep 17 00:03 allfiles.txt
-rw-r--r-- 1 paul paul  95K Sep 17 00:03 dmesg.txt
-rw-r--r-- 1 paul paul  20K Sep 17 00:04 services
drwxr-xr-x 2 paul paul 4.0K Sep 17 00:04 stuff
-rw-r--r-- 1 paul paul    0 Sep 17 00:04 summer.txt
paul@debian8:~$ <command>ls -hl</command>
total 17M
-rw-r--r-- 1 paul paul  17M Sep 17 00:03 allfiles.txt
-rw-r--r-- 1 paul paul  95K Sep 17 00:03 dmesg.txt
-rw-r--r-- 1 paul paul  20K Sep 17 00:04 services
drwxr-xr-x 2 paul paul 4.0K Sep 17 00:04 stuff
-rw-r--r-- 1 paul paul    0 Sep 17 00:04 summer.txt
paul@debian8:~$ <command>ls -h -l</command>
total 17M
-rw-r--r-- 1 paul paul  17M Sep 17 00:03 allfiles.txt
-rw-r--r-- 1 paul paul  95K Sep 17 00:03 dmesg.txt
-rw-r--r-- 1 paul paul  20K Sep 17 00:04 services
drwxr-xr-x 2 paul paul 4.0K Sep 17 00:04 stuff
-rw-r--r-- 1 paul paul    0 Sep 17 00:04 summer.txt
paul@debian8:~$</screen>
		</section>
	</section>
<?hard-pagebreak?>
	<section><title><emphasis>mkdir</emphasis></title>
		<para>Walking around the Unix file tree is fun, but it is even more fun to create your own directories with <command>mkdir</command><indexterm><primary>mkdir(1)</primary></indexterm>. You have to give at least one parameter to <command>mkdir</command>, the name of the new directory to be created. Think before you type a leading <command>/</command> . </para>
		<screen>paul@debian8:~$ <command>mkdir mydir</command>
paul@debian8:~$ <command>cd mydir</command>
paul@debian8:~/mydir$ <command>ls -al</command>
total 8
drwxr-xr-x  2 paul paul 4096 Sep 17 00:07 .
drwxr-xr-x 48 paul paul 4096 Sep 17 00:07 ..
paul@debian8:~/mydir$ <command>mkdir stuff</command>
paul@debian8:~/mydir$ <command>mkdir otherstuff</command>
paul@debian8:~/mydir$ <command>ls -l</command>
total 8
drwxr-xr-x 2 paul paul 4096 Sep 17 00:08 otherstuff
drwxr-xr-x 2 paul paul 4096 Sep 17 00:08 stuff
paul@debian8:~/mydir$</screen>
		<section><title><emphasis>mkdir -p</emphasis></title>
			<para>The following command will fail, because the <command>parent directory</command> of <command>threedirsdeep</command> does not exist.</para>
			<screen>paul@debian8:~$ <command>mkdir mydir2/mysubdir2/threedirsdeep</command>
mkdir: cannot create directory ‘mydir2/mysubdir2/threedirsdeep’: No such fi\
le or directory</screen>
			<para>When given the option <command>-p</command><indexterm><primary>mkdir -p</primary></indexterm>, then <command>mkdir</command> will create <command>parent directories</command> as needed.</para>
<screen>paul@debian8:~$ <command>mkdir -p mydir2/mysubdir2/threedirsdeep</command>
paul@debian8:~$ <command>cd mydir2</command>
paul@debian8:~/mydir2$ <command>ls -l</command>
total 4
drwxr-xr-x 3 paul paul 4096 Sep 17 00:11 mysubdir2
paul@debian8:~/mydir2$ <command>cd mysubdir2</command>
paul@debian8:~/mydir2/mysubdir2$ <command>ls -l</command>
total 4
drwxr-xr-x 2 paul paul 4096 Sep 17 00:11 threedirsdeep
paul@debian8:~/mydir2/mysubdir2$ <command>cd threedirsdeep/</command>
paul@debian8:~/mydir2/mysubdir2/threedirsdeep$ <command>pwd</command>
/home/paul/mydir2/mysubdir2/threedirsdeep</screen>
		</section>
	</section>
	<section><title><emphasis>rmdir</emphasis></title>
		<para>When a directory is empty, you can use <command>rmdir</command><indexterm><primary>rmdir(1)</primary></indexterm> to remove the directory.</para>
		<screen>paul@debian8:~/mydir$ <command>ls -l</command>
total 8
drwxr-xr-x 2 paul paul 4096 Sep 17 00:08 otherstuff
drwxr-xr-x 2 paul paul 4096 Sep 17 00:08 stuff
paul@debian8:~/mydir$ <command>rmdir otherstuff</command>
paul@debian8:~/mydir$ <command>cd ..</command>
paul@debian8:~$ <command>rmdir mydir</command>
rmdir: failed to remove ‘mydir’: Directory not empty
paul@debian8:~$ <command>rmdir mydir/stuff</command>
paul@debian8:~$ <command>rmdir mydir</command>
paul@debian8:~$</screen>
		<section><title><emphasis>rmdir -p</emphasis></title>
			<para>And similar to the <command>mkdir -p</command><indexterm><primary>rmdir -p</primary></indexterm> option, you can also use <command>rmdir</command> to recursively remove directories.</para>
			<screen>paul@debian8:~$ <command>mkdir -p test42/subdir</command>
paul@debian8:~$ <command>rmdir -p test42/subdir</command>
paul@debian8:~$</screen>
		</section>
	</section>
